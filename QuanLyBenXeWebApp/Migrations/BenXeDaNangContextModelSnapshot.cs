// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyBenXeWebApp.Models;

namespace QuanLyBenXeWebApp.Migrations
{
    [DbContext(typeof(BenXeDaNangContext))]
    partial class BenXeDaNangContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.DiemDung", b =>
                {
                    b.Property<string>("MaDiemDung")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("HuyenQuan")
                        .HasMaxLength(50);

                    b.Property<string>("SoNhaDuong")
                        .HasMaxLength(40);

                    b.Property<string>("TenTinhTp")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ThonAp")
                        .HasMaxLength(50);

                    b.Property<string>("XaPhuong")
                        .HasMaxLength(50);

                    b.HasKey("MaDiemDung");

                    b.ToTable("DiemDung");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.GiaoDich", b =>
                {
                    b.Property<string>("MaGiaoDich")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("MaNhaXe")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("NgayGiaoDich");

                    b.HasKey("MaGiaoDich");

                    b.HasIndex("MaNhaXe");

                    b.ToTable("GiaoDich");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.LichSuVaoRa", b =>
                {
                    b.Property<int>("Stt")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaViTri")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MaXeKhach")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("ThoiDiem");

                    b.Property<bool>("VaoBen");

                    b.HasKey("Stt");

                    b.HasIndex("MaViTri");

                    b.HasIndex("MaXeKhach");

                    b.ToTable("LichSuVaoRa");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.NhaXe", b =>
                {
                    b.Property<string>("MaNhaXe")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("GiaoDichCuoi");

                    b.Property<string>("MauBieuTuong")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<int>("SoLuongXe");

                    b.Property<string>("TenNhaXe")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("MaNhaXe");

                    b.ToTable("NhaXe");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.QuanTriVien", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("GioiTinh");

                    b.Property<string>("HoDem")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MaNhaXe")
                        .HasMaxLength(10);

                    b.Property<string>("NoiSinh")
                        .HasMaxLength(40);

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("MaNhaXe");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.TTBenXe", b =>
                {
                    b.Property<int>("Stt")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GioNhapBen");

                    b.Property<string>("MaViTri")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MaXeKhach")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Stt");

                    b.HasIndex("MaViTri");

                    b.HasIndex("MaXeKhach");

                    b.ToTable("TTBenXe");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.TaiXe", b =>
                {
                    b.Property<string>("MaTaiXe")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<bool>("GioiTinh");

                    b.Property<string>("HoDem")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("NoiSinh")
                        .HasMaxLength(50);

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("MaTaiXe");

                    b.ToTable("TaiXe");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.ViTriDo", b =>
                {
                    b.Property<string>("MaViTri")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.HasKey("MaViTri");

                    b.ToTable("ViTriDo");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.XeKhach", b =>
                {
                    b.Property<string>("MaXeKhach")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("BienSoXe")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<int>("GiaVe");

                    b.Property<string>("MaNhaXe")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MaTaiXe")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("SoGhe");

                    b.HasKey("MaXeKhach");

                    b.HasIndex("MaNhaXe");

                    b.HasIndex("MaTaiXe")
                        .IsUnique();

                    b.ToTable("XeKhach");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.XeKhach_DiemDung", b =>
                {
                    b.Property<int>("Stt")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("GioDiKhoiDN");

                    b.Property<TimeSpan>("GioDiToiDN");

                    b.Property<string>("MaDiemDung")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MaXeKhach")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<TimeSpan>("TGDCkhoiDN");

                    b.Property<TimeSpan>("TGDCtoiDN");

                    b.HasKey("Stt");

                    b.HasIndex("MaDiemDung");

                    b.HasIndex("MaXeKhach", "MaDiemDung", "GioDiKhoiDN", "GioDiToiDN", "TGDCkhoiDN", "TGDCtoiDN")
                        .IsUnique();

                    b.ToTable("XeKhach_DiemDung");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.QuanTriVien")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.QuanTriVien")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyBenXeWebApp.Models.QuanTriVien")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.QuanTriVien")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.GiaoDich", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.NhaXe", "NhaXe")
                        .WithMany()
                        .HasForeignKey("MaNhaXe")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.LichSuVaoRa", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.ViTriDo", "ViTriDo")
                        .WithMany()
                        .HasForeignKey("MaViTri")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyBenXeWebApp.Models.XeKhach", "XeKhach")
                        .WithMany()
                        .HasForeignKey("MaXeKhach")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.QuanTriVien", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.NhaXe", "NhaXe")
                        .WithMany()
                        .HasForeignKey("MaNhaXe");
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.TTBenXe", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.ViTriDo", "ViTriDo")
                        .WithMany()
                        .HasForeignKey("MaViTri")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyBenXeWebApp.Models.XeKhach", "XeKhach")
                        .WithMany()
                        .HasForeignKey("MaXeKhach")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.XeKhach", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.NhaXe", "NhaXe")
                        .WithMany("XeKhachList")
                        .HasForeignKey("MaNhaXe")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyBenXeWebApp.Models.TaiXe", "TaiXe")
                        .WithOne("XeKhach")
                        .HasForeignKey("QuanLyBenXeWebApp.Models.XeKhach", "MaTaiXe")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyBenXeWebApp.Models.XeKhach_DiemDung", b =>
                {
                    b.HasOne("QuanLyBenXeWebApp.Models.DiemDung", "DiemDung")
                        .WithMany("XeKhachList")
                        .HasForeignKey("MaDiemDung")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyBenXeWebApp.Models.XeKhach", "XeKhach")
                        .WithMany("DiemDungList")
                        .HasForeignKey("MaXeKhach")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
